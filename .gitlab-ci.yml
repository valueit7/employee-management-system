image: ubuntu:latest

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
#  REGISTRY: registry.gitlab.com/aymch/employee-management-system
#  MYSQL_IMAGE: $REGISTRY/mysql
#  BACKEND_IMAGE: $REGISTRY/spring-app
#  FRONTEND_IMAGE: $REGISTRY/angular-app

#before_script:
#  - echo "Logging in to GitLab Container Registry..."
#  - echo "Installing Docker Compose..."
#  - apk add --no-cache docker-compose
#  - echo "Logging in to GitLab Container Registry..."
#  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

before_script:
  - echo "Forcing bash shell..."
  - export SHELL=/bin/bash
  - which bash
  - bash --version
#  - echo "Logging in to GitLab Container Registry..."
  - apt-get update && apt-get install -y docker-compose jq curl  # Use apt-get to install docker-compose, jq et curl
#  - echo "Logging in to GitLab Container Registry..."
#  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - echo "Available shells:"
  - cat /etc/shells



stages:
  - build
  - generate_release_notes
  - deploy

# Build images with Docker Compose
build:
  stage: build
  script:
    - docker-compose -f docker-compose.yml build
#    - docker tag spring-app $REGISTRY/spring-app:$CI_COMMIT_REF_NAME
#    - docker tag angular-app $REGISTRY/angular-app:$CI_COMMIT_REF_NAME
#    - docker push $REGISTRY/spring-app:$CI_COMMIT_REF_NAME
#    - docker push $REGISTRY/angular-app:$CI_COMMIT_REF_NAME
  tags:
    - localrunner
    - localshell
    
# Génération des release notes
generate_release_notes:
  stage: generate_release_notes
  script:
    - chmod +x generate_release.sh  # Rendre le script exécutable
    - ./generate_release.sh         # Exécuter le script de génération
  artifacts:
    paths:
      - release_notes.md            # Sauvegarde du fichier pour le job suivant
  tags:
    - localrunner
    - localshell

# Deploy images locally
deploy:
  stage: deploy
  script:
    - echo "Deploying to Docker Desktop..."
    - docker-compose -f docker-compose.yml up -d  
  tags:
    - localrunner
    - localshell   
  only:
    - main
  dependencies:
    - generate_release_notes   # S'assurer que le fichier release_notes.md est bien généré





#image: ubuntu:latest

#stages:
#  - noop

#noop_job:
#  stage: noop
#  script:
#    - echo "This job does nothing."